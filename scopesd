#!/bin/bash

##############################################################################
#
#   Scopes Daemon start up script for POSIX generated by Scopes project.
#
#   This script provides a Gradle wrapper-style development experience for
#   the Scopes daemon, making it easier to debug and test during development.
#
##############################################################################

# Attempt to set APP_HOME
app_path=$0

# Need this for daisy-chained symlinks.
while
    APP_HOME=${app_path%"${app_path##*/}"}  # leaves a trailing /; empty if no leading path
    [ -h "$app_path" ]
do
    ls=$( ls -ld "$app_path" )
    link=${ls#*' -> '}
    case $link in             #(
      /*)   app_path=$link ;; #(
      *)    app_path=$APP_HOME$link ;;
    esac
done

# Discard cd standard output in case $CDPATH is set
APP_HOME=$( cd -P "${APP_HOME:-./}" > /dev/null && printf '%s\n' "$PWD" ) || exit

# Default configuration
DEFAULT_LOG_LEVEL="INFO"
DEFAULT_HOST="127.0.0.1"
DEFAULT_PORT="0"
DEFAULT_JVM_OPTS=""

# Load wrapper configuration if it exists
WRAPPER_CONFIG="$APP_HOME/.scopes/wrapper.properties"
if [ -f "$WRAPPER_CONFIG" ]; then
    while IFS='=' read -r key value
    do
        case $key in
            scopesd.log.level) DEFAULT_LOG_LEVEL="$value" ;;
            scopesd.host) DEFAULT_HOST="$value" ;;
            scopesd.port) DEFAULT_PORT="$value" ;;
            scopesd.jvm.opts) DEFAULT_JVM_OPTS="$value" ;;
        esac
    done < "$WRAPPER_CONFIG"
fi

# Parse wrapper-specific arguments
DEBUG_MODE=false
PROFILE_MODE=false
JVM_DEBUG_PORT=5006
JVM_OPTS="$DEFAULT_JVM_OPTS"
LOG_LEVEL="$DEFAULT_LOG_LEVEL"
HOST="$DEFAULT_HOST"
PORT="$DEFAULT_PORT"
GRADLE_TASK="run"
DAEMON_ARGS=()

warn () {
    echo "$*"
} >&2

die () {
    echo
    echo "$*"
    echo
    exit 1
} >&2

show_help() {
    cat << EOF
Scopes Daemon Development Wrapper

USAGE:
    ./scopesd [WRAPPER_OPTIONS] [DAEMON_ARGUMENTS...]

WRAPPER OPTIONS:
    --debug                 Enable JVM debug mode (port $JVM_DEBUG_PORT)
    --debug-port PORT       Set JVM debug port (default: $JVM_DEBUG_PORT)
    --profile               Enable JVM profiling
    --log-level LEVEL       Set log level (TRACE|DEBUG|INFO|WARN|ERROR)
    --gradle-task TASK      Set Gradle task (default: run)
    --jvm-opts OPTS         Additional JVM options
    --help-wrapper          Show this wrapper help

DAEMON OPTIONS:
    --host HOST             Host to bind the gRPC server to (default: $DEFAULT_HOST)
    --port PORT             Port to bind the gRPC server to (default: $DEFAULT_PORT)
    --allow-external-bind   Allow binding to external addresses (required for non-localhost)

DAEMON ARGUMENTS:
    All daemon-specific arguments are passed to the Scopes daemon application.

EXAMPLES:
    ./scopesd --debug
    ./scopesd --log-level DEBUG --host 0.0.0.0 --port 50051
    ./scopesd --profile --debug-port 5007
    ./scopesd --gradle-task build

CONFIGURATION:
    Create $APP_HOME/.scopes/wrapper.properties to set defaults:
        scopesd.log.level=DEBUG
        scopesd.host=0.0.0.0
        scopesd.port=50051
        scopesd.jvm.opts=-Xmx2g
EOF
}

# Parse arguments
ALLOW_EXTERNAL_BIND=false
while [[ $# -gt 0 ]]; do
    case $1 in
        --debug)
            DEBUG_MODE=true
            shift
            ;;
        --debug-port)
            JVM_DEBUG_PORT="$2"
            shift 2
            ;;
        --profile)
            PROFILE_MODE=true
            shift
            ;;
        --log-level)
            LOG_LEVEL="$2"
            shift 2
            ;;
        --gradle-task)
            GRADLE_TASK="$2"
            shift 2
            ;;
        --jvm-opts)
            JVM_OPTS="$JVM_OPTS $2"
            shift 2
            ;;
        --help-wrapper)
            show_help
            exit 0
            ;;
        --host)
            HOST="$2"
            DAEMON_ARGS+=("$1" "$2")
            shift 2
            ;;
        --port)
            PORT="$2"
            DAEMON_ARGS+=("$1" "$2")
            shift 2
            ;;
        --allow-external-bind)
            ALLOW_EXTERNAL_BIND=true
            DAEMON_ARGS+=("$1")
            shift
            ;;
        *)
            DAEMON_ARGS+=("$1")
            shift
            ;;
    esac
done

# Determine the Java command to use to start the JVM.
if [ -n "$JAVA_HOME" ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
        # IBM's JDK on AIX uses strange locations for the executables
        JAVACMD=$JAVA_HOME/jre/sh/java
    else
        JAVACMD=$JAVA_HOME/bin/java
    fi
    if [ ! -x "$JAVACMD" ] ; then
        die "ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
else
    JAVACMD=java
    if ! command -v java >/dev/null 2>&1
    then
        die "ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.

Please set the JAVA_HOME variable in your environment to match the
location of your Java installation."
    fi
fi

# Build JVM arguments
if [ "$DEBUG_MODE" = true ]; then
    JVM_OPTS="$JVM_OPTS -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:$JVM_DEBUG_PORT"
    echo "🐛 Debug mode enabled on port $JVM_DEBUG_PORT"
fi

if [ "$PROFILE_MODE" = true ]; then
    JVM_OPTS="$JVM_OPTS -XX:+FlightRecorder -XX:StartFlightRecording=duration=60s,filename=scopesd-profile.jfr"
    echo "📊 Profiling enabled (output: scopesd-profile.jfr)"
fi

# Set environment variables for the daemon
export SCOPES_LOG_LEVEL="$LOG_LEVEL"

# Build Gradle arguments
GRADLE_ARGS=()
GRADLE_ARGS+=("$GRADLE_TASK")

if [ "$GRADLE_TASK" = "run" ]; then
    GRADLE_ARGS+=(":apps-scopesd:run")
    if [ ${#DAEMON_ARGS[@]} -gt 0 ]; then
        # Join arguments with proper quoting for Gradle
        DAEMON_CLI_ARGS=""
        for arg in "${DAEMON_ARGS[@]}"; do
            if [[ "$arg" == *" "* ]]; then
                DAEMON_CLI_ARGS="$DAEMON_CLI_ARGS \"$arg\""
            else
                DAEMON_CLI_ARGS="$DAEMON_CLI_ARGS $arg"
            fi
        done
        GRADLE_ARGS+=("--args=$DAEMON_CLI_ARGS")
    fi
else
    GRADLE_ARGS+=("${DAEMON_ARGS[@]}")
fi

# Set GRADLE_OPTS for JVM options
export GRADLE_OPTS="$JVM_OPTS"

echo "🚀 Starting Scopes Daemon..."
echo "   Log Level: $LOG_LEVEL"
echo "   Host: $HOST"
echo "   Port: $PORT"
if [ "$DEBUG_MODE" = true ] || [ "$PROFILE_MODE" = true ]; then
    echo "   JVM Options: $JVM_OPTS"
fi
if [ ${#DAEMON_ARGS[@]} -gt 0 ]; then
    echo "   Daemon Args: ${DAEMON_ARGS[*]}"
fi
echo

# Security check: Prevent external binding without explicit permission
if [ "$ALLOW_EXTERNAL_BIND" = false ]; then
    # Check if HOST is a localhost address
    case "$HOST" in
        localhost|127.0.0.1|::1|127.*)
            # Localhost addresses are allowed
            ;;
        *)
            # External address requires explicit permission
            echo >&2
            echo "[ERROR] Binding to external address '$HOST' is not allowed by default" >&2
            echo "[ERROR] For security reasons, only localhost addresses are permitted" >&2
            echo "[ERROR] To bind to external addresses, use --allow-external-bind flag" >&2
            echo >&2
            echo "Example:" >&2
            echo "  ./scopesd --host 0.0.0.0 --allow-external-bind" >&2
            echo >&2
            echo "WARNING: Binding to external addresses without TLS is insecure!" >&2
            exit 1
            ;;
    esac
fi

# Execute Gradle with the daemon
exec "$APP_HOME/gradlew" "${GRADLE_ARGS[@]}"