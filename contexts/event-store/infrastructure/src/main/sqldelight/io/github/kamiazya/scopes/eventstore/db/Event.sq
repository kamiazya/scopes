-- Events table for Event Store
CREATE TABLE IF NOT EXISTS events (
    sequence_number INTEGER PRIMARY KEY AUTOINCREMENT,
    event_id TEXT NOT NULL UNIQUE,
    aggregate_id TEXT NOT NULL,
    aggregate_version INTEGER NOT NULL,
    event_type TEXT NOT NULL,
    event_data TEXT NOT NULL,
    occurred_at INTEGER NOT NULL,
    stored_at INTEGER NOT NULL
);

-- Indexes for efficient querying
CREATE INDEX IF NOT EXISTS idx_events_aggregate_id_version ON events(aggregate_id, aggregate_version);
CREATE INDEX IF NOT EXISTS idx_events_stored_at ON events(stored_at);
CREATE INDEX IF NOT EXISTS idx_events_sequence_number ON events(sequence_number);
CREATE INDEX IF NOT EXISTS idx_events_event_type ON events(event_type);

-- Insert event (sequence_number is auto-generated)
insertEvent:
INSERT INTO events (
    event_id,
    aggregate_id,
    aggregate_version,
    event_type,
    event_data,
    occurred_at,
    stored_at
) VALUES (?, ?, ?, ?, ?, ?, ?);

-- Get event by event_id
getEventByEventId:
SELECT * FROM events WHERE event_id = ?;

-- Find events since timestamp
findEventsSince:
SELECT *
FROM events
WHERE stored_at >= ?
ORDER BY sequence_number ASC;

-- Find events by aggregate ID
findEventsByAggregateId:
SELECT *
FROM events
WHERE aggregate_id = ?
ORDER BY aggregate_version ASC;

-- Find events by aggregate ID since timestamp
findEventsByAggregateIdSince:
SELECT *
FROM events
WHERE aggregate_id = ?
AND stored_at >= ?
ORDER BY aggregate_version ASC;

-- Find events by event type
findEventsByType:
SELECT *
FROM events
WHERE event_type = ?
ORDER BY sequence_number ASC;

-- Find events by event type since timestamp
findEventsByTypeSince:
SELECT *
FROM events
WHERE event_type = ?
AND stored_at >= ?
ORDER BY sequence_number ASC;
